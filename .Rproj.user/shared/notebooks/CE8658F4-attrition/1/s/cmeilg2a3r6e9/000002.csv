"0","# NumCompaniesWorked"
"0",""
"0","#We are going to replace the NaN values with ""0"". This value is not present in the data."
"0","attrition['NumCompaniesWorked'] = attrition['NumCompaniesWorked'].fillna(0)"
"0","#TotalWorkingYears"
"0",""
"0","# Again, there is not much information on the dictionary that we can refer too. Also, it doesn't seem to be a pattern on these NaNs. We are going to replace it with 0."
"0","attrition['TotalWorkingYears'] = attrition['TotalWorkingYears'].fillna(0)"
"0",""
"0","# EnvironmentSatisfaction"
"0",""
"0","# No pattern of these NaNs could be detected. There is no much information on the data dictionary. We are going to use the same logic as the previous ones:"
"0","attrition['EnvironmentSatisfaction'] = attrition['EnvironmentSatisfaction'].fillna(0)"
"0",""
"0","# JobSatisfaction"
"0",""
"0","# Although these people have several experience in their jobs, the Job Satisfaction was not reflected on the data. Since there is no enough information on the data dictionary, we are going to replace these values using the same logic as before:"
"0",""
"0","attrition['JobSatisfaction'] = attrition['JobSatisfaction'].fillna(0)"
"0",""
"0","# WorkLifeBalance"
"0","# No pattern was detected as the previous examples. Let's replace these NaNs with the same logic as before:"
"0",""
"0","attrition['WorkLifeBalance'] = attrition['WorkLifeBalance'].fillna(0)"
"0",""
"0","### CHECKING NANS again:"
"0","attrition_null_value_col = attrition.isna().sum()[attrition.isna().sum()!= 0].reset_index().rename(columns="
"0","                                                                        {'index': 'col_name', 0: '#'})"
"0","attrition_null_value_col['%'] = attrition_null_value_col['#'] / attrition.shape[0]"
"0",""
"0","attrition_null_value_col"
"1","Empty DataFrame
Columns: [col_name, #, %]
Index: []
"
